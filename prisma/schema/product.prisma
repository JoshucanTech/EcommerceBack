// Product-related models
model Product {
  id             String          @id @default(uuid())
  name           String
  description    String
  price          Float
  discountPrice  Float?
  quantity       Int             @default(0)
  sku            String          @unique
  images         String[]
  isPublished    Boolean         @default(false)
  vendorId       String
  vendor         Vendor          @relation(fields: [vendorId], references: [id], onDelete: Cascade)
  categoryId     String
  category       Category        @relation(fields: [categoryId], references: [id])
  reviews        Review[]
  orderItems     OrderItem[]
  wishlistItems  WishlistItem[]
  inventory      Inventory?
  flashSaleItems FlashSaleItem[]
  comments       Comment[]
  cartItems      CartItem[]
  slug           String          @unique
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt

  @@map("products")
}

model Category {
  id            String     @id @default(uuid())
  name          String     @unique
  description   String?
  image         String?
  parentId      String?
  parent        Category?  @relation("CategorySubcategories", fields: [parentId], references: [id])
  subcategories Category[] @relation("CategorySubcategories")
  products      Product[]
  slug          String     @unique
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  @@map("categories")
}

model Inventory {
  id                String   @id @default(uuid())
  productId         String   @unique
  product           Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  vendorId          String
  vendor            Vendor   @relation(fields: [vendorId], references: [id], onDelete: Cascade)
  quantity          Int      @default(0)
  lowStockThreshold Int      @default(10)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("inventory")
}

model Review {
  id        String   @id @default(uuid())
  rating    Int
  comment   String?
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("reviews")
}
